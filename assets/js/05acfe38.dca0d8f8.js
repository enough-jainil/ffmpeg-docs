"use strict";(self.webpackChunkytdlp_docs=self.webpackChunkytdlp_docs||[]).push([[1368],{3510:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var t=o(4848),i=o(8453);const s={sidebar_position:1},r="Using yt-dlp in Python Scripts",d={id:"Embedding yt-dlp/using-yt-dlp-in-python-scripts",title:"Using yt-dlp in Python Scripts",description:"yt-dlp can be easily integrated into your Python scripts, allowing you to programmatically download videos and extract information. This guide will show you how to use yt-dlp's Python API in your own scripts.",source:"@site/docs/Embedding yt-dlp/using-yt-dlp-in-python-scripts.md",sourceDirName:"Embedding yt-dlp",slug:"/Embedding yt-dlp/using-yt-dlp-in-python-scripts",permalink:"/yt-dlp-doc/docs/Embedding yt-dlp/using-yt-dlp-in-python-scripts",draft:!1,unlisted:!1,editUrl:"https://github.com/enough-jainil/yt-dlp-doc/docs/Embedding yt-dlp/using-yt-dlp-in-python-scripts.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Embedding yt-dlp",permalink:"/yt-dlp-doc/docs/category/embedding-yt-dlp"},next:{title:"Examples of Embedding yt-dlp",permalink:"/yt-dlp-doc/docs/Embedding yt-dlp/examples-of-embedding"}},l={},a=[{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Customizing Options",id:"customizing-options",level:2},{value:"Extracting Video Information",id:"extracting-video-information",level:2},{value:"Handling Playlists",id:"handling-playlists",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Progress Hooks",id:"progress-hooks",level:2},{value:"Working with Cookies",id:"working-with-cookies",level:2},{value:"Logging",id:"logging",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Advanced Usage",id:"advanced-usage",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"using-yt-dlp-in-python-scripts",children:"Using yt-dlp in Python Scripts"})}),"\n",(0,t.jsx)(e.p,{children:"yt-dlp can be easily integrated into your Python scripts, allowing you to programmatically download videos and extract information. This guide will show you how to use yt-dlp's Python API in your own scripts."}),"\n",(0,t.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(e.p,{children:"First, ensure yt-dlp is installed in your Python environment:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"pip install yt-dlp\n"})}),"\n",(0,t.jsx)(e.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(e.p,{children:"Here's a simple example of how to use yt-dlp in a Python script:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"import yt_dlp\r\n\r\ndef download_video(url):\r\n    ydl_opts = {}\r\n    with yt_dlp.YoutubeDL(ydl_opts) as ydl:\r\n        ydl.download([url])\r\n\r\n# Usage\r\ndownload_video('https://www.youtube.com/watch?v=dQw4w9WgXcQ')\n"})}),"\n",(0,t.jsx)(e.h2,{id:"customizing-options",children:"Customizing Options"}),"\n",(0,t.jsxs)(e.p,{children:["You can customize the download behavior by passing options to ",(0,t.jsx)(e.code,{children:"YoutubeDL"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"ydl_opts = {\r\n    'format': 'bestaudio/best',\r\n    'postprocessors': [{\r\n        'key': 'FFmpegExtractAudio',\r\n        'preferredcodec': 'mp3',\r\n        'preferredquality': '192',\r\n    }],\r\n    'outtmpl': '%(title)s.%(ext)s'\r\n}\r\n\r\nwith yt_dlp.YoutubeDL(ydl_opts) as ydl:\r\n    ydl.download(['https://www.youtube.com/watch?v=dQw4w9WgXcQ'])\n"})}),"\n",(0,t.jsx)(e.h2,{id:"extracting-video-information",children:"Extracting Video Information"}),"\n",(0,t.jsx)(e.p,{children:"To extract information without downloading:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"def get_video_info(url):\r\n    ydl_opts = {}\r\n    with yt_dlp.YoutubeDL(ydl_opts) as ydl:\r\n        info = ydl.extract_info(url, download=False)\r\n    return info\r\n\r\n# Usage\r\ninfo = get_video_info('https://www.youtube.com/watch?v=dQw4w9WgXcQ')\r\nprint(f\"Title: {info['title']}\")\r\nprint(f\"Duration: {info['duration']} seconds\")\n"})}),"\n",(0,t.jsx)(e.h2,{id:"handling-playlists",children:"Handling Playlists"}),"\n",(0,t.jsx)(e.p,{children:"yt-dlp can handle playlists as well:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"def download_playlist(url):\r\n    ydl_opts = {\r\n        'outtmpl': '%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s',\r\n    }\r\n    with yt_dlp.YoutubeDL(ydl_opts) as ydl:\r\n        ydl.download([url])\r\n\r\n# Usage\r\ndownload_playlist('https://www.youtube.com/playlist?list=PLrEnWoR732-BHrPp_Pm8_VleD68f9s14-')\n"})}),"\n",(0,t.jsx)(e.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(e.p,{children:"It's important to handle potential errors:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"from yt_dlp.utils import DownloadError\r\n\r\ndef safe_download(url):\r\n    ydl_opts = {}\r\n    try:\r\n        with yt_dlp.YoutubeDL(ydl_opts) as ydl:\r\n            ydl.download([url])\r\n    except DownloadError as e:\r\n        print(f\"Error downloading {url}: {str(e)}\")\r\n\r\n# Usage\r\nsafe_download('https://www.youtube.com/watch?v=dQw4w9WgXcQ')\n"})}),"\n",(0,t.jsx)(e.h2,{id:"progress-hooks",children:"Progress Hooks"}),"\n",(0,t.jsx)(e.p,{children:"You can add a progress hook to track the download progress:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"def my_hook(d):\r\n    if d['status'] == 'finished':\r\n        print('Done downloading, now converting ...')\r\n\r\nydl_opts = {\r\n    'progress_hooks': [my_hook],\r\n}\r\n\r\nwith yt_dlp.YoutubeDL(ydl_opts) as ydl:\r\n    ydl.download(['https://www.youtube.com/watch?v=dQw4w9WgXcQ'])\n"})}),"\n",(0,t.jsx)(e.h2,{id:"working-with-cookies",children:"Working with Cookies"}),"\n",(0,t.jsx)(e.p,{children:"If you need to use cookies for authenticated downloads:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"ydl_opts = {\r\n    'cookiefile': 'cookies.txt'\r\n}\r\n\r\nwith yt_dlp.YoutubeDL(ydl_opts) as ydl:\r\n    ydl.download(['https://www.example.com/private_video'])\n"})}),"\n",(0,t.jsx)(e.h2,{id:"logging",children:"Logging"}),"\n",(0,t.jsx)(e.p,{children:"yt-dlp uses Python's logging module. You can configure it in your scripts:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"import logging\r\n\r\nlogging.basicConfig(level=logging.DEBUG)\r\n\r\nydl_opts = {\r\n    'logger': logging.getLogger(__name__),\r\n}\r\n\r\nwith yt_dlp.YoutubeDL(ydl_opts) as ydl:\r\n    ydl.download(['https://www.youtube.com/watch?v=dQw4w9WgXcQ'])\n"})}),"\n",(0,t.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Always handle exceptions to prevent your script from crashing."}),"\n",(0,t.jsxs)(e.li,{children:["Use context managers (",(0,t.jsx)(e.code,{children:"with"})," statements) when working with ",(0,t.jsx)(e.code,{children:"YoutubeDL"})," objects."]}),"\n",(0,t.jsx)(e.li,{children:"Be mindful of rate limiting and respect the terms of service of the websites you're downloading from."}),"\n",(0,t.jsx)(e.li,{children:"Use progress hooks for better user feedback in longer running scripts."}),"\n",(0,t.jsx)(e.li,{children:"Consider using async operations for handling multiple downloads efficiently."}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,t.jsx)(e.p,{children:"For more advanced usage, including custom extractors and post-processors, refer to the yt-dlp documentation and source code."}),"\n",(0,t.jsx)(e.p,{children:"Remember, when using yt-dlp in your Python scripts, you have the full power of Python at your disposal. This allows for complex workflows, integration with other libraries, and building full-fledged applications around video downloading and processing."})]})}function p(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>r,x:()=>d});var t=o(6540);const i={},s=t.createContext(i);function r(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);